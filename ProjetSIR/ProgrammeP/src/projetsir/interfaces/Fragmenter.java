/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetsir.interfaces;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import projetsir.bd_globale;

/**
 *
 * @author yv965015
 */
public class Fragmenter extends javax.swing.JFrame {

    /**
     * Creates new form Fragmenter
     */
    public Fragmenter() {
        initComponents();
        bd_globale bdg=new bd_globale();
        String[] l_tables=bdg.get_liste_nom_tables();
        Liste_tables.removeAllItems();
        for(int i=0;i<l_tables.length;i++)
        {
            
            Liste_tables.addItem(l_tables[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Titre = new javax.swing.JLabel();
        Liste_tables = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        f_verticale = new javax.swing.JButton();
        f_horizontale = new javax.swing.JButton();
        Valider = new javax.swing.JButton();

        addWindowFocusListener(new java.awt.event.WindowFocusListener()
        {
            public void windowGainedFocus(java.awt.event.WindowEvent evt)
            {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt)
            {
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(0, 2));

        Titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titre.setText("Fragmenter");
        getContentPane().add(Titre, java.awt.BorderLayout.NORTH);

        Liste_tables.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(Liste_tables, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        f_verticale.setText("Fragmentation verticale");
        f_verticale.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                f_verticaleActionPerformed(evt);
            }
        });
        jPanel3.add(f_verticale);

        f_horizontale.setText("Fragmentation horizontale");
        f_horizontale.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                f_horizontaleActionPerformed(evt);
            }
        });
        jPanel3.add(f_horizontale);

        jPanel1.add(jPanel3);

        Valider.setText("Valider");
        Valider.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ValiderActionPerformed(evt);
            }
        });
        jPanel1.add(Valider);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderActionPerformed
        //Tout doux Ecrire le résultat en JSO\N
        File repertoire = new File("src/fragmentation_temporaire");
        File[] files=repertoire.listFiles();
        String ajoutF="{\n\t\"tables\":\n\t[";
        String finFich="\t]\n}";
        FileOutputStream fos = null;
        for(int i=0;i<files.length;i++)
        {
            try {
                ajoutF+=this.lire_fichier(files[i]);
            } catch (IOException ex) {
                Logger.getLogger(Fragmenter.class.getName()).log(Level.SEVERE, null, ex);
            }
           if(i!=files.length-1)
               ajoutF+=",";
        }
        ajoutF+=finFich;
        this.EcrireFichier(new File("src/fragmentation_temporaire/globaltest.json"), ajoutF);
        this.setVisible(false);
        for(int i=0;i<files.length;i++)
        {
            if(!files[i].getName().equals("globaltest.json"))
            files[i].delete();
        }
        //TO DO : Enregistrer en new Parametres().get_chemin_schemas()+"/global.json"
        //new Transformation_global_local();
        //Communication c = new Communication(0);
        //c.start();
    }//GEN-LAST:event_ValiderActionPerformed
    private void EcrireFichier(File f,String s)
    {
        try{
            FileWriter ffw=new FileWriter(f);
            ffw.write(s);  // écrire une ligne dans le fichier resultat.txt
            ffw.close(); // fermer le fichier à la fin des traitements
            } catch (Exception e) {}

    }
    private String lire_fichier(File f) throws IOException
    {
        FileReader in = null;
        String contenu="";
        try
        {
            in = new FileReader(f);
            //Envoi du fichier
            int c;
            contenu = "";
            //int taille = in.available();
            while((c=in.read())!=-1)
                contenu += (char)c;
            in.close();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        return contenu;
    }
    private void f_verticaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_verticaleActionPerformed
        DLG_Frag_Verticale dlgV=new DLG_Frag_Verticale((String) Liste_tables.getSelectedItem());
        dlgV.setVisible(true);
    }//GEN-LAST:event_f_verticaleActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        File repertoire = new File("src/fragmentation_temporaire");
        File[] files=repertoire.listFiles();
        String nomfich="";
        List<String> tables=new ArrayList<>();
        for(int i=0;i<this.Liste_tables.getItemCount();i++)
        {
            tables.add(this.Liste_tables.getItemAt(i));
        }
        List<File> lfiles= Arrays.asList(files);
        for(int i=0;i<lfiles.size();i++)
        {
            nomfich=lfiles.get(i).getName();
            if(tables.contains(nomfich))
            {
                this.Liste_tables.setSelectedIndex(0);
                this.Liste_tables.removeItem(nomfich);
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void f_horizontaleActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_f_horizontaleActionPerformed
    {//GEN-HEADEREND:event_f_horizontaleActionPerformed
        new DLG_Frag_Horizontale().setVisible(true);
        
    }//GEN-LAST:event_f_horizontaleActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fragmenter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fragmenter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fragmenter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fragmenter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fragmenter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Liste_tables;
    private javax.swing.JLabel Titre;
    private javax.swing.JButton Valider;
    private javax.swing.JButton f_horizontale;
    private javax.swing.JButton f_verticale;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
